```bash
   ~/Д/Learning/Netology/devops-netology/diploma/terraform    master !2 ?3  terraform plan                                                                                               ✔  stage   mc
data.yandex_compute_image.boot_image: Reading...
data.yandex_compute_image.boot_image: Read complete after 1s [id=fd826dalmbcl81eo5nig]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # local_file.hosts will be created
  + resource "local_file" "hosts" {
      + content              = <<-EOT
            # Generated by Terraform.
            # Host addresses
            127.0.0.1  localhost
            ::1        localhost ip6-localhost ip6-loopback

            192.168.201.10  nl-nginx nginx
            192.168.201.21  nl-db01
            192.168.201.22  nl-db02
            192.168.201.30   nl-app
            192.168.201.40    nl-gitlab
            192.168.201.50    nl-monitoring

        EOT
      + directory_permission = "0777"
      + file_permission      = "0644"
      + filename             = "../ansible/files/hosts"
      + id                   = (known after apply)
    }

  # local_file.inventory will be created
  + resource "local_file" "inventory" {
      + content              = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0644"
      + filename             = "../ansible/inventory.yml"
      + id                   = (known after apply)
    }

  # null_resource.ansible will be created
  + resource "null_resource" "ansible" {
      + id = (known after apply)
    }

  # null_resource.wait will be created
  + resource "null_resource" "wait" {
      + id = (known after apply)
    }

  # yandex_compute_instance.app will be created
  + resource "yandex_compute_instance" "app" {
      + allow_stopping_for_update = true
      + created_at                = (known after apply)
      + description               = "stage app node for wordpress"
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + hostname                  = "nl-app"
      + id                        = (known after apply)
      + metadata                  = {
          + "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCw8PGWJ9VOqdmMxEnmRaq2xm9pzAbkLZE0pt/7K3GP6IcoJfyn77XacrseUtH37o8t7xZ1KqGaK1v5VS8utCCyWAuvKvrS/79erb8AQ/EZIBB7CgPagjmV8PDJ/63tWj/pHk+kTTi9jHJvpiEXMuHTopW72qsIlfPD31T4fOD75xdKPcv1nEKm+Zbvubc1BqWolfZRWOSd6gI6NeP6qd2kL+U+PXk3NHsXgnYrl9+McyWnX7uSbdoXGzu8cbfgLtwKBpzd61oXKHRc94JwxDzGwrWPoeFxWQSWuPQD5M6vnN/U4U6QMBtP5LJS7Huk4wBKDTguwM0xJkumVgUn/8vxvBmFaOpySzfwBvHE2ExVCW0K5n0b+Nq96vaQCa1iKJEHDJQjkUs1z3p2s4ayEAuHwBD9ES4mCA0JMeLS1CFTKMogR5aZ3zzaM/GZGa0H5x1GktaqLwBldrRez1WbR2kGeCvNF7+6w7/tcqetKHap7mjel5uiFkx/RKM0B8v9QnU= yuts@yuts-dell
            EOT
        }
      + name                      = "wordpress-stage"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-b"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd826dalmbcl81eo5nig"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = "192.168.201.30"
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = (known after apply)
        }

      + placement_policy {
          + host_affinity_rules = (known after apply)
          + placement_group_id  = (known after apply)
        }

      + resources {
          + core_fraction = 100
          + cores         = 4
          + memory        = 4
        }

      + scheduling_policy {
          + preemptible = (known after apply)
        }
    }

  # yandex_compute_instance.gitlab will be created
  + resource "yandex_compute_instance" "gitlab" {
      + allow_stopping_for_update = true
      + created_at                = (known after apply)
      + description               = "stage git node for gitlab"
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + hostname                  = "nl-gitlab"
      + id                        = (known after apply)
      + metadata                  = {
          + "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCw8PGWJ9VOqdmMxEnmRaq2xm9pzAbkLZE0pt/7K3GP6IcoJfyn77XacrseUtH37o8t7xZ1KqGaK1v5VS8utCCyWAuvKvrS/79erb8AQ/EZIBB7CgPagjmV8PDJ/63tWj/pHk+kTTi9jHJvpiEXMuHTopW72qsIlfPD31T4fOD75xdKPcv1nEKm+Zbvubc1BqWolfZRWOSd6gI6NeP6qd2kL+U+PXk3NHsXgnYrl9+McyWnX7uSbdoXGzu8cbfgLtwKBpzd61oXKHRc94JwxDzGwrWPoeFxWQSWuPQD5M6vnN/U4U6QMBtP5LJS7Huk4wBKDTguwM0xJkumVgUn/8vxvBmFaOpySzfwBvHE2ExVCW0K5n0b+Nq96vaQCa1iKJEHDJQjkUs1z3p2s4ayEAuHwBD9ES4mCA0JMeLS1CFTKMogR5aZ3zzaM/GZGa0H5x1GktaqLwBldrRez1WbR2kGeCvNF7+6w7/tcqetKHap7mjel5uiFkx/RKM0B8v9QnU= yuts@yuts-dell
            EOT
        }
      + name                      = "gitlab-stage"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-b"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd826dalmbcl81eo5nig"
              + name        = (known after apply)
              + size        = 10
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = "192.168.201.40"
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = false
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = (known after apply)
        }

      + placement_policy {
          + host_affinity_rules = (known after apply)
          + placement_group_id  = (known after apply)
        }

      + resources {
          + core_fraction = 100
          + cores         = 4
          + memory        = 4
        }

      + scheduling_policy {
          + preemptible = (known after apply)
        }
    }

  # yandex_compute_instance.monitoring will be created
  + resource "yandex_compute_instance" "monitoring" {
      + allow_stopping_for_update = true
      + created_at                = (known after apply)
      + description               = "stage monitoring node for Prometheus, Alert Manager и Grafana"
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + hostname                  = "nl-monitoring"
      + id                        = (known after apply)
      + metadata                  = {
          + "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCw8PGWJ9VOqdmMxEnmRaq2xm9pzAbkLZE0pt/7K3GP6IcoJfyn77XacrseUtH37o8t7xZ1KqGaK1v5VS8utCCyWAuvKvrS/79erb8AQ/EZIBB7CgPagjmV8PDJ/63tWj/pHk+kTTi9jHJvpiEXMuHTopW72qsIlfPD31T4fOD75xdKPcv1nEKm+Zbvubc1BqWolfZRWOSd6gI6NeP6qd2kL+U+PXk3NHsXgnYrl9+McyWnX7uSbdoXGzu8cbfgLtwKBpzd61oXKHRc94JwxDzGwrWPoeFxWQSWuPQD5M6vnN/U4U6QMBtP5LJS7Huk4wBKDTguwM0xJkumVgUn/8vxvBmFaOpySzfwBvHE2ExVCW0K5n0b+Nq96vaQCa1iKJEHDJQjkUs1z3p2s4ayEAuHwBD9ES4mCA0JMeLS1CFTKMogR5aZ3zzaM/GZGa0H5x1GktaqLwBldrRez1WbR2kGeCvNF7+6w7/tcqetKHap7mjel5uiFkx/RKM0B8v9QnU= yuts@yuts-dell
            EOT
        }
      + name                      = "monitoring-stage"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-b"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd826dalmbcl81eo5nig"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = "192.168.201.50"
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = (known after apply)
        }

      + placement_policy {
          + host_affinity_rules = (known after apply)
          + placement_group_id  = (known after apply)
        }

      + resources {
          + core_fraction = 100
          + cores         = 4
          + memory        = 4
        }

      + scheduling_policy {
          + preemptible = (known after apply)
        }
    }

  # yandex_compute_instance.mysql[0] will be created
  + resource "yandex_compute_instance" "mysql" {
      + allow_stopping_for_update = true
      + created_at                = (known after apply)
      + description               = "stage DB node for mysql"
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + hostname                  = "nl-db01"
      + id                        = (known after apply)
      + metadata                  = {
          + "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCw8PGWJ9VOqdmMxEnmRaq2xm9pzAbkLZE0pt/7K3GP6IcoJfyn77XacrseUtH37o8t7xZ1KqGaK1v5VS8utCCyWAuvKvrS/79erb8AQ/EZIBB7CgPagjmV8PDJ/63tWj/pHk+kTTi9jHJvpiEXMuHTopW72qsIlfPD31T4fOD75xdKPcv1nEKm+Zbvubc1BqWolfZRWOSd6gI6NeP6qd2kL+U+PXk3NHsXgnYrl9+McyWnX7uSbdoXGzu8cbfgLtwKBpzd61oXKHRc94JwxDzGwrWPoeFxWQSWuPQD5M6vnN/U4U6QMBtP5LJS7Huk4wBKDTguwM0xJkumVgUn/8vxvBmFaOpySzfwBvHE2ExVCW0K5n0b+Nq96vaQCa1iKJEHDJQjkUs1z3p2s4ayEAuHwBD9ES4mCA0JMeLS1CFTKMogR5aZ3zzaM/GZGa0H5x1GktaqLwBldrRez1WbR2kGeCvNF7+6w7/tcqetKHap7mjel5uiFkx/RKM0B8v9QnU= yuts@yuts-dell
            EOT
        }
      + name                      = "mysql-stage-01"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-b"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd826dalmbcl81eo5nig"
              + name        = (known after apply)
              + size        = 10
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = "192.168.201.21"
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = false
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = (known after apply)
        }

      + placement_policy {
          + host_affinity_rules = (known after apply)
          + placement_group_id  = (known after apply)
        }

      + resources {
          + core_fraction = 100
          + cores         = 4
          + memory        = 4
        }

      + scheduling_policy {
          + preemptible = (known after apply)
        }
    }

  # yandex_compute_instance.mysql[1] will be created
  + resource "yandex_compute_instance" "mysql" {
      + allow_stopping_for_update = true
      + created_at                = (known after apply)
      + description               = "stage DB node for mysql"
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + hostname                  = "nl-db02"
      + id                        = (known after apply)
      + metadata                  = {
          + "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCw8PGWJ9VOqdmMxEnmRaq2xm9pzAbkLZE0pt/7K3GP6IcoJfyn77XacrseUtH37o8t7xZ1KqGaK1v5VS8utCCyWAuvKvrS/79erb8AQ/EZIBB7CgPagjmV8PDJ/63tWj/pHk+kTTi9jHJvpiEXMuHTopW72qsIlfPD31T4fOD75xdKPcv1nEKm+Zbvubc1BqWolfZRWOSd6gI6NeP6qd2kL+U+PXk3NHsXgnYrl9+McyWnX7uSbdoXGzu8cbfgLtwKBpzd61oXKHRc94JwxDzGwrWPoeFxWQSWuPQD5M6vnN/U4U6QMBtP5LJS7Huk4wBKDTguwM0xJkumVgUn/8vxvBmFaOpySzfwBvHE2ExVCW0K5n0b+Nq96vaQCa1iKJEHDJQjkUs1z3p2s4ayEAuHwBD9ES4mCA0JMeLS1CFTKMogR5aZ3zzaM/GZGa0H5x1GktaqLwBldrRez1WbR2kGeCvNF7+6w7/tcqetKHap7mjel5uiFkx/RKM0B8v9QnU= yuts@yuts-dell
            EOT
        }
      + name                      = "mysql-stage-02"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-b"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd826dalmbcl81eo5nig"
              + name        = (known after apply)
              + size        = 10
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = "192.168.201.22"
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = false
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = (known after apply)
        }

      + placement_policy {
          + host_affinity_rules = (known after apply)
          + placement_group_id  = (known after apply)
        }

      + resources {
          + core_fraction = 100
          + cores         = 4
          + memory        = 4
        }

      + scheduling_policy {
          + preemptible = (known after apply)
        }
    }

  # yandex_compute_instance.proxy will be created
  + resource "yandex_compute_instance" "proxy" {
      + allow_stopping_for_update = true
      + created_at                = (known after apply)
      + description               = "stage nginx node for reverse-proxy"
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + hostname                  = "amabam.ru"
      + id                        = (known after apply)
      + metadata                  = {
          + "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCw8PGWJ9VOqdmMxEnmRaq2xm9pzAbkLZE0pt/7K3GP6IcoJfyn77XacrseUtH37o8t7xZ1KqGaK1v5VS8utCCyWAuvKvrS/79erb8AQ/EZIBB7CgPagjmV8PDJ/63tWj/pHk+kTTi9jHJvpiEXMuHTopW72qsIlfPD31T4fOD75xdKPcv1nEKm+Zbvubc1BqWolfZRWOSd6gI6NeP6qd2kL+U+PXk3NHsXgnYrl9+McyWnX7uSbdoXGzu8cbfgLtwKBpzd61oXKHRc94JwxDzGwrWPoeFxWQSWuPQD5M6vnN/U4U6QMBtP5LJS7Huk4wBKDTguwM0xJkumVgUn/8vxvBmFaOpySzfwBvHE2ExVCW0K5n0b+Nq96vaQCa1iKJEHDJQjkUs1z3p2s4ayEAuHwBD9ES4mCA0JMeLS1CFTKMogR5aZ3zzaM/GZGa0H5x1GktaqLwBldrRez1WbR2kGeCvNF7+6w7/tcqetKHap7mjel5uiFkx/RKM0B8v9QnU= yuts@yuts-dell
            EOT
        }
      + name                      = "proxy-stage"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-b"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd826dalmbcl81eo5nig"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = "192.168.201.10"
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = (known after apply)
        }

      + placement_policy {
          + host_affinity_rules = (known after apply)
          + placement_group_id  = (known after apply)
        }

      + resources {
          + core_fraction = 100
          + cores         = 2
          + memory        = 2
        }

      + scheduling_policy {
          + preemptible = (known after apply)
        }
    }

  # yandex_dns_recordset.rs1 will be created
  + resource "yandex_dns_recordset" "rs1" {
      + data    = (known after apply)
      + id      = (known after apply)
      + name    = "amabam.ru."
      + ttl     = 600
      + type    = "A"
      + zone_id = (known after apply)
    }

  # yandex_dns_recordset.rs2 will be created
  + resource "yandex_dns_recordset" "rs2" {
      + data    = (known after apply)
      + id      = (known after apply)
      + name    = "www"
      + ttl     = 600
      + type    = "A"
      + zone_id = (known after apply)
    }

  # yandex_dns_recordset.rs3 will be created
  + resource "yandex_dns_recordset" "rs3" {
      + data    = (known after apply)
      + id      = (known after apply)
      + name    = "gitlab"
      + ttl     = 600
      + type    = "A"
      + zone_id = (known after apply)
    }

  # yandex_dns_recordset.rs4 will be created
  + resource "yandex_dns_recordset" "rs4" {
      + data    = (known after apply)
      + id      = (known after apply)
      + name    = "grafana"
      + ttl     = 600
      + type    = "A"
      + zone_id = (known after apply)
    }

  # yandex_dns_recordset.rs5 will be created
  + resource "yandex_dns_recordset" "rs5" {
      + data    = (known after apply)
      + id      = (known after apply)
      + name    = "prometheus"
      + ttl     = 600
      + type    = "A"
      + zone_id = (known after apply)
    }

  # yandex_dns_recordset.rs6 will be created
  + resource "yandex_dns_recordset" "rs6" {
      + data    = (known after apply)
      + id      = (known after apply)
      + name    = "alertmanager"
      + ttl     = 600
      + type    = "A"
      + zone_id = (known after apply)
    }

  # yandex_dns_zone.pub-zone will be created
  + resource "yandex_dns_zone" "pub-zone" {
      + created_at       = (known after apply)
      + folder_id        = (known after apply)
      + id               = (known after apply)
      + name             = "public-zone"
      + private_networks = (known after apply)
      + public           = true
      + zone             = "amabam.ru."
    }

  # yandex_vpc_network.network will be created
  + resource "yandex_vpc_network" "network" {
      + created_at                = (known after apply)
      + default_security_group_id = (known after apply)
      + folder_id                 = (known after apply)
      + id                        = (known after apply)
      + labels                    = (known after apply)
      + name                      = "net-stage"
      + subnet_ids                = (known after apply)
    }

  # yandex_vpc_route_table.nat-instance-route will be created
  + resource "yandex_vpc_route_table" "nat-instance-route" {
      + created_at = (known after apply)
      + folder_id  = (known after apply)
      + id         = (known after apply)
      + labels     = (known after apply)
      + network_id = (known after apply)

      + static_route {
          + destination_prefix = "0.0.0.0/0"
          + next_hop_address   = "192.168.201.10"
        }
    }

  # yandex_vpc_subnet.subnetwork will be created
  + resource "yandex_vpc_subnet" "subnetwork" {
      + created_at     = (known after apply)
      + folder_id      = (known after apply)
      + id             = (known after apply)
      + labels         = (known after apply)
      + name           = "subnet-stage"
      + network_id     = (known after apply)
      + route_table_id = (known after apply)
      + v4_cidr_blocks = [
          + "192.168.201.0/24",
        ]
      + v6_cidr_blocks = (known after apply)
      + zone           = "ru-central1-b"
    }

Plan: 20 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + external_ip_address_nginx = (known after apply)

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.
```